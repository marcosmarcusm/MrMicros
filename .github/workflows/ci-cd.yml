name: Build and Push to ACR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-push:
    environment: Dev-Env
    permissions:
      id-token: write 
    runs-on: ubuntu-latest
    env:
      ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore
        run: dotnet restore

      - name: Debug
        run: |
          pwd
          ls -R .

      - name: Publish Service A
        run: |
            dotnet publish Service-A/Service-A.csproj \
             --configuration Release \
             --output Service-A/publish

      - name: Publish Service B
        run: |
            dotnet publish Service-B/Service-B.csproj \
             --configuration Release \
             --output Service-B/publish

      - name: Azure Login
        uses: Azure/login@v2.3.0
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: ACR Login
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push Service A
        uses: docker/build-push-action@v3
        with:
          context: Service-A
          file:    Service-A/Dockerfile
          push:    true
          tags:    ${{ env.ACR_LOGIN_SERVER }}/servicea:${{ github.sha }}

      - name: Build & Push Service B
        uses: docker/build-push-action@v3
        with:
          context: Service-B
          file:    Service-B/Dockerfile
          push:    true
          tags:    ${{ env.ACR_LOGIN_SERVER }}/serviceb:${{ github.sha }}
